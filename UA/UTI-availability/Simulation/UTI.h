/* $*************** KCG Version 6.1.3 (build i6) ****************
** Command: s2c613 -config C:/Users/thais/projetosigac/UA/UTI-availability/Simulation\kcg_s2c_config.txt
** Generation date: 2015-09-24T10:15:33
*************************************************************$ */
#ifndef _UTI_H_
#define _UTI_H_

#include "kcg_types.h"

/* ========================  input structure  ====================== */
typedef struct {
  kcg_bool /* UTI::AllocateBed1 */ AllocateBed1;
  kcg_bool /* UTI::ActivateBed2 */ ActivateBed2;
  kcg_bool /* UTI::ActivateBed3 */ ActivateBed3;
  kcg_bool /* UTI::ActivateBed4 */ ActivateBed4;
  kcg_bool /* UTI::ActivateBed5 */ ActivateBed5;
  kcg_bool /* UTI::ActivateBed6 */ ActivateBed6;
  kcg_bool /* UTI::ActivateBed7 */ ActivateBed7;
  kcg_bool /* UTI::ActivateBed8 */ ActivateBed8;
  kcg_bool /* UTI::ActivateBed1 */ ActivateBed1;
  kcg_bool /* UTI::AllocateBed2 */ AllocateBed2;
  kcg_bool /* UTI::AllocateBed4 */ AllocateBed4;
  kcg_bool /* UTI::AllocateBed3 */ AllocateBed3;
  kcg_bool /* UTI::AllocateBed6 */ AllocateBed6;
  kcg_bool /* UTI::AllocateBed5 */ AllocateBed5;
  kcg_bool /* UTI::AllocateBed7 */ AllocateBed7;
  kcg_bool /* UTI::AllocateBed8 */ AllocateBed8;
} inC_UTI;

/* ========================  context type  ========================= */
typedef struct {
  /* ---------------------------  outputs  --------------------------- */
  kcg_real /* UTI::ActiveBedsCount */ ActiveBedsCount;
  kcg_real /* UTI::AllocatedBedsCount */ AllocatedBedsCount;
  kcg_int /* UTI::BedColor1 */ BedColor1;
  kcg_real /* UTI::FreeBedsCount */ FreeBedsCount;
  kcg_int /* UTI::BedColor2 */ BedColor2;
  kcg_int /* UTI::BedColor3 */ BedColor3;
  kcg_int /* UTI::BedColor4 */ BedColor4;
  kcg_int /* UTI::BedColor5 */ BedColor5;
  kcg_int /* UTI::BedColor6 */ BedColor6;
  kcg_int /* UTI::BedColor7 */ BedColor7;
  kcg_int /* UTI::BedColor8 */ BedColor8;
  kcg_bool /* UTI::EmitToCDS */ EmitToCDS;
  kcg_bool /* UTI::LayerVisible */ LayerVisible;
  /* -----------------------  no local probes  ----------------------- */
  /* -------------------- initialization variables  ------------------ */
  kcg_bool init;
  /* ----------------------- local memories  ------------------------- */
  kcg_bool /* Toggle::_L4 */ _L4_2_12;
  kcg_bool /* Toggle::_L4 */ _L4_1_12;
  kcg_bool /* Toggle::_L4 */ _L4_2_11;
  kcg_bool /* Toggle::_L4 */ _L4_1_11;
  kcg_bool /* Toggle::_L4 */ _L4_2_9;
  kcg_bool /* Toggle::_L4 */ _L4_1_9;
  kcg_bool /* Toggle::_L4 */ _L4_2_7;
  kcg_bool /* Toggle::_L4 */ _L4_1_7;
  kcg_bool /* Toggle::_L4 */ _L4_2_6;
  kcg_bool /* Toggle::_L4 */ _L4_1_6;
  kcg_bool /* Toggle::_L4 */ _L4_2_5;
  kcg_bool /* Toggle::_L4 */ _L4_1_5;
  kcg_bool /* Toggle::_L4 */ _L4_2_4;
  kcg_bool /* Toggle::_L4 */ _L4_1_4;
  kcg_bool /* Toggle::_L4 */ _L4_2_1;
  kcg_bool /* Toggle::_L4 */ _L4_1_1;
  /* -------------------- no sub nodes' contexts  -------------------- */
  /* ----------------- no clocks of observable data ------------------ */
  /* -------------------- (-debug) no assertions  -------------------- */
  /* ------------------- (-debug) local variables -------------------- */
  kcg_bool /* Toggle::_L1 */ _L1_2_12;
  kcg_bool /* Toggle::_L2 */ _L2_2_12;
  kcg_bool /* Toggle::_L3 */ _L3_2_12;
  kcg_bool /* Toggle::Output */ Output_2_12;
  kcg_bool /* Toggle::Input */ Input_2_12;
  kcg_bool /* Toggle::_L1 */ _L1_1_12;
  kcg_bool /* Toggle::_L2 */ _L2_1_12;
  kcg_bool /* Toggle::_L3 */ _L3_1_12;
  kcg_bool /* Toggle::Output */ Output_1_12;
  kcg_bool /* Toggle::Input */ Input_1_12;
  kcg_bool /* Bed::_L1 */ _L1_12;
  kcg_bool /* Bed::_L2 */ _L2_12;
  kcg_bool /* Bed::_L3 */ _L3_12;
  kcg_bool /* Bed::_L4 */ _L4_12;
  kcg_bool /* Bed::_L5 */ _L5_12;
  kcg_int /* Bed::_L6 */ _L6_12;
  kcg_int /* Bed::_L7 */ _L7_12;
  kcg_int /* Bed::_L8 */ _L8_12;
  kcg_int /* Bed::_L9 */ _L9_12;
  kcg_int /* Bed::_L10 */ _L10_12;
  kcg_int /* Bed::_L11 */ _L11_12;
  kcg_int /* Bed::_L12 */ _L12_12;
  kcg_int /* Bed::_L13 */ _L13_12;
  kcg_int /* Bed::_L16 */ _L16_12;
  kcg_int /* Bed::_L15 */ _L15_12;
  kcg_int /* Bed::_L14 */ _L14_12;
  kcg_bool /* Bed::_L17 */ _L17_12;
  kcg_int /* Bed::BedColor */ BedColor_12;
  kcg_int /* Bed::BedAllocated */ BedAllocated_12;
  kcg_int /* Bed::BedActive */ BedActive_12;
  kcg_bool /* Bed::Allocate */ Allocate_12;
  kcg_bool /* Bed::Activate */ Activate_12;
  kcg_bool /* Toggle::_L1 */ _L1_2_11;
  kcg_bool /* Toggle::_L2 */ _L2_2_11;
  kcg_bool /* Toggle::_L3 */ _L3_2_11;
  kcg_bool /* Toggle::Output */ Output_2_11;
  kcg_bool /* Toggle::Input */ Input_2_11;
  kcg_bool /* Toggle::_L1 */ _L1_1_11;
  kcg_bool /* Toggle::_L2 */ _L2_1_11;
  kcg_bool /* Toggle::_L3 */ _L3_1_11;
  kcg_bool /* Toggle::Output */ Output_1_11;
  kcg_bool /* Toggle::Input */ Input_1_11;
  kcg_bool /* Bed::_L1 */ _L1_11;
  kcg_bool /* Bed::_L2 */ _L2_11;
  kcg_bool /* Bed::_L3 */ _L3_11;
  kcg_bool /* Bed::_L4 */ _L4_11;
  kcg_bool /* Bed::_L5 */ _L5_11;
  kcg_int /* Bed::_L6 */ _L6_11;
  kcg_int /* Bed::_L7 */ _L7_11;
  kcg_int /* Bed::_L8 */ _L8_11;
  kcg_int /* Bed::_L9 */ _L9_11;
  kcg_int /* Bed::_L10 */ _L10_11;
  kcg_int /* Bed::_L11 */ _L11_11;
  kcg_int /* Bed::_L12 */ _L12_11;
  kcg_int /* Bed::_L13 */ _L13_11;
  kcg_int /* Bed::_L16 */ _L16_11;
  kcg_int /* Bed::_L15 */ _L15_11;
  kcg_int /* Bed::_L14 */ _L14_11;
  kcg_bool /* Bed::_L17 */ _L17_11;
  kcg_int /* Bed::BedColor */ BedColor_11;
  kcg_int /* Bed::BedAllocated */ BedAllocated_11;
  kcg_int /* Bed::BedActive */ BedActive_11;
  kcg_bool /* Bed::Allocate */ Allocate_11;
  kcg_bool /* Bed::Activate */ Activate_11;
  kcg_bool /* Toggle::_L1 */ _L1_2_9;
  kcg_bool /* Toggle::_L2 */ _L2_2_9;
  kcg_bool /* Toggle::_L3 */ _L3_2_9;
  kcg_bool /* Toggle::Output */ Output_2_9;
  kcg_bool /* Toggle::Input */ Input_2_9;
  kcg_bool /* Toggle::_L1 */ _L1_1_9;
  kcg_bool /* Toggle::_L2 */ _L2_1_9;
  kcg_bool /* Toggle::_L3 */ _L3_1_9;
  kcg_bool /* Toggle::Output */ Output_1_9;
  kcg_bool /* Toggle::Input */ Input_1_9;
  kcg_bool /* Bed::_L1 */ _L1_9;
  kcg_bool /* Bed::_L2 */ _L2_9;
  kcg_bool /* Bed::_L3 */ _L3_9;
  kcg_bool /* Bed::_L4 */ _L4_9;
  kcg_bool /* Bed::_L5 */ _L5_9;
  kcg_int /* Bed::_L6 */ _L6_9;
  kcg_int /* Bed::_L7 */ _L7_9;
  kcg_int /* Bed::_L8 */ _L8_9;
  kcg_int /* Bed::_L9 */ _L9_9;
  kcg_int /* Bed::_L10 */ _L10_9;
  kcg_int /* Bed::_L11 */ _L11_9;
  kcg_int /* Bed::_L12 */ _L12_9;
  kcg_int /* Bed::_L13 */ _L13_9;
  kcg_int /* Bed::_L16 */ _L16_9;
  kcg_int /* Bed::_L15 */ _L15_9;
  kcg_int /* Bed::_L14 */ _L14_9;
  kcg_bool /* Bed::_L17 */ _L17_9;
  kcg_int /* Bed::BedColor */ BedColor_9;
  kcg_int /* Bed::BedAllocated */ BedAllocated_9;
  kcg_int /* Bed::BedActive */ BedActive_9;
  kcg_bool /* Bed::Allocate */ Allocate_9;
  kcg_bool /* Bed::Activate */ Activate_9;
  kcg_bool /* Toggle::_L1 */ _L1_2_7;
  kcg_bool /* Toggle::_L2 */ _L2_2_7;
  kcg_bool /* Toggle::_L3 */ _L3_2_7;
  kcg_bool /* Toggle::Output */ Output_2_7;
  kcg_bool /* Toggle::Input */ Input_2_7;
  kcg_bool /* Toggle::_L1 */ _L1_1_7;
  kcg_bool /* Toggle::_L2 */ _L2_1_7;
  kcg_bool /* Toggle::_L3 */ _L3_1_7;
  kcg_bool /* Toggle::Output */ Output_1_7;
  kcg_bool /* Toggle::Input */ Input_1_7;
  kcg_bool /* Bed::_L1 */ _L1_7;
  kcg_bool /* Bed::_L2 */ _L2_7;
  kcg_bool /* Bed::_L3 */ _L3_7;
  kcg_bool /* Bed::_L4 */ _L4_7;
  kcg_bool /* Bed::_L5 */ _L5_7;
  kcg_int /* Bed::_L6 */ _L6_7;
  kcg_int /* Bed::_L7 */ _L7_7;
  kcg_int /* Bed::_L8 */ _L8_7;
  kcg_int /* Bed::_L9 */ _L9_7;
  kcg_int /* Bed::_L10 */ _L10_7;
  kcg_int /* Bed::_L11 */ _L11_7;
  kcg_int /* Bed::_L12 */ _L12_7;
  kcg_int /* Bed::_L13 */ _L13_7;
  kcg_int /* Bed::_L16 */ _L16_7;
  kcg_int /* Bed::_L15 */ _L15_7;
  kcg_int /* Bed::_L14 */ _L14_7;
  kcg_bool /* Bed::_L17 */ _L17_7;
  kcg_int /* Bed::BedColor */ BedColor_7;
  kcg_int /* Bed::BedAllocated */ BedAllocated_7;
  kcg_int /* Bed::BedActive */ BedActive_7;
  kcg_bool /* Bed::Allocate */ Allocate_7;
  kcg_bool /* Bed::Activate */ Activate_7;
  kcg_bool /* Toggle::_L1 */ _L1_2_6;
  kcg_bool /* Toggle::_L2 */ _L2_2_6;
  kcg_bool /* Toggle::_L3 */ _L3_2_6;
  kcg_bool /* Toggle::Output */ Output_2_6;
  kcg_bool /* Toggle::Input */ Input_2_6;
  kcg_bool /* Toggle::_L1 */ _L1_1_6;
  kcg_bool /* Toggle::_L2 */ _L2_1_6;
  kcg_bool /* Toggle::_L3 */ _L3_1_6;
  kcg_bool /* Toggle::Output */ Output_1_6;
  kcg_bool /* Toggle::Input */ Input_1_6;
  kcg_bool /* Bed::_L1 */ _L1_6;
  kcg_bool /* Bed::_L2 */ _L2_6;
  kcg_bool /* Bed::_L3 */ _L3_6;
  kcg_bool /* Bed::_L4 */ _L4_6;
  kcg_bool /* Bed::_L5 */ _L5_6;
  kcg_int /* Bed::_L6 */ _L6_6;
  kcg_int /* Bed::_L7 */ _L7_6;
  kcg_int /* Bed::_L8 */ _L8_6;
  kcg_int /* Bed::_L9 */ _L9_6;
  kcg_int /* Bed::_L10 */ _L10_6;
  kcg_int /* Bed::_L11 */ _L11_6;
  kcg_int /* Bed::_L12 */ _L12_6;
  kcg_int /* Bed::_L13 */ _L13_6;
  kcg_int /* Bed::_L16 */ _L16_6;
  kcg_int /* Bed::_L15 */ _L15_6;
  kcg_int /* Bed::_L14 */ _L14_6;
  kcg_bool /* Bed::_L17 */ _L17_6;
  kcg_int /* Bed::BedColor */ BedColor_6;
  kcg_int /* Bed::BedAllocated */ BedAllocated_6;
  kcg_int /* Bed::BedActive */ BedActive_6;
  kcg_bool /* Bed::Allocate */ Allocate_6;
  kcg_bool /* Bed::Activate */ Activate_6;
  kcg_bool /* Toggle::_L1 */ _L1_2_5;
  kcg_bool /* Toggle::_L2 */ _L2_2_5;
  kcg_bool /* Toggle::_L3 */ _L3_2_5;
  kcg_bool /* Toggle::Output */ Output_2_5;
  kcg_bool /* Toggle::Input */ Input_2_5;
  kcg_bool /* Toggle::_L1 */ _L1_1_5;
  kcg_bool /* Toggle::_L2 */ _L2_1_5;
  kcg_bool /* Toggle::_L3 */ _L3_1_5;
  kcg_bool /* Toggle::Output */ Output_1_5;
  kcg_bool /* Toggle::Input */ Input_1_5;
  kcg_bool /* Bed::_L1 */ _L1_5;
  kcg_bool /* Bed::_L2 */ _L2_5;
  kcg_bool /* Bed::_L3 */ _L3_5;
  kcg_bool /* Bed::_L4 */ _L4_5;
  kcg_bool /* Bed::_L5 */ _L5_5;
  kcg_int /* Bed::_L6 */ _L6_5;
  kcg_int /* Bed::_L7 */ _L7_5;
  kcg_int /* Bed::_L8 */ _L8_5;
  kcg_int /* Bed::_L9 */ _L9_5;
  kcg_int /* Bed::_L10 */ _L10_5;
  kcg_int /* Bed::_L11 */ _L11_5;
  kcg_int /* Bed::_L12 */ _L12_5;
  kcg_int /* Bed::_L13 */ _L13_5;
  kcg_int /* Bed::_L16 */ _L16_5;
  kcg_int /* Bed::_L15 */ _L15_5;
  kcg_int /* Bed::_L14 */ _L14_5;
  kcg_bool /* Bed::_L17 */ _L17_5;
  kcg_int /* Bed::BedColor */ BedColor_5;
  kcg_int /* Bed::BedAllocated */ BedAllocated_5;
  kcg_int /* Bed::BedActive */ BedActive_5;
  kcg_bool /* Bed::Allocate */ Allocate_5;
  kcg_bool /* Bed::Activate */ Activate_5;
  kcg_bool /* Toggle::_L1 */ _L1_2_4;
  kcg_bool /* Toggle::_L2 */ _L2_2_4;
  kcg_bool /* Toggle::_L3 */ _L3_2_4;
  kcg_bool /* Toggle::Output */ Output_2_4;
  kcg_bool /* Toggle::Input */ Input_2_4;
  kcg_bool /* Toggle::_L1 */ _L1_1_4;
  kcg_bool /* Toggle::_L2 */ _L2_1_4;
  kcg_bool /* Toggle::_L3 */ _L3_1_4;
  kcg_bool /* Toggle::Output */ Output_1_4;
  kcg_bool /* Toggle::Input */ Input_1_4;
  kcg_bool /* Bed::_L1 */ _L1_4;
  kcg_bool /* Bed::_L2 */ _L2_4;
  kcg_bool /* Bed::_L3 */ _L3_4;
  kcg_bool /* Bed::_L4 */ _L4_4;
  kcg_bool /* Bed::_L5 */ _L5_4;
  kcg_int /* Bed::_L6 */ _L6_4;
  kcg_int /* Bed::_L7 */ _L7_4;
  kcg_int /* Bed::_L8 */ _L8_4;
  kcg_int /* Bed::_L9 */ _L9_4;
  kcg_int /* Bed::_L10 */ _L10_4;
  kcg_int /* Bed::_L11 */ _L11_4;
  kcg_int /* Bed::_L12 */ _L12_4;
  kcg_int /* Bed::_L13 */ _L13_4;
  kcg_int /* Bed::_L16 */ _L16_4;
  kcg_int /* Bed::_L15 */ _L15_4;
  kcg_int /* Bed::_L14 */ _L14_4;
  kcg_bool /* Bed::_L17 */ _L17_4;
  kcg_int /* Bed::BedColor */ BedColor_4;
  kcg_int /* Bed::BedAllocated */ BedAllocated_4;
  kcg_int /* Bed::BedActive */ BedActive_4;
  kcg_bool /* Bed::Allocate */ Allocate_4;
  kcg_bool /* Bed::Activate */ Activate_4;
  kcg_bool /* Toggle::_L1 */ _L1_2_1;
  kcg_bool /* Toggle::_L2 */ _L2_2_1;
  kcg_bool /* Toggle::_L3 */ _L3_2_1;
  kcg_bool /* Toggle::Output */ Output_2_1;
  kcg_bool /* Toggle::Input */ Input_2_1;
  kcg_bool /* Toggle::_L1 */ _L1_1_1;
  kcg_bool /* Toggle::_L2 */ _L2_1_1;
  kcg_bool /* Toggle::_L3 */ _L3_1_1;
  kcg_bool /* Toggle::Output */ Output_1_1;
  kcg_bool /* Toggle::Input */ Input_1_1;
  kcg_bool /* Bed::_L1 */ _L1_1;
  kcg_bool /* Bed::_L2 */ _L2_1;
  kcg_bool /* Bed::_L3 */ _L3_1;
  kcg_bool /* Bed::_L4 */ _L4_1;
  kcg_bool /* Bed::_L5 */ _L5_1;
  kcg_int /* Bed::_L6 */ _L6_1;
  kcg_int /* Bed::_L7 */ _L7_1;
  kcg_int /* Bed::_L8 */ _L8_1;
  kcg_int /* Bed::_L9 */ _L9_1;
  kcg_int /* Bed::_L10 */ _L10_1;
  kcg_int /* Bed::_L11 */ _L11_1;
  kcg_int /* Bed::_L12 */ _L12_1;
  kcg_int /* Bed::_L13 */ _L13_1;
  kcg_int /* Bed::_L16 */ _L16_1;
  kcg_int /* Bed::_L15 */ _L15_1;
  kcg_int /* Bed::_L14 */ _L14_1;
  kcg_bool /* Bed::_L17 */ _L17_1;
  kcg_int /* Bed::BedColor */ BedColor_1;
  kcg_int /* Bed::BedAllocated */ BedAllocated_1;
  kcg_int /* Bed::BedActive */ BedActive_1;
  kcg_bool /* Bed::Allocate */ Allocate_1;
  kcg_bool /* Bed::Activate */ Activate_1;
  kcg_int /* UTI::_L3 */ _L3;
  kcg_int /* UTI::_L2 */ _L2;
  kcg_int /* UTI::_L1 */ _L1;
  kcg_int /* UTI::_L10 */ _L10;
  kcg_int /* UTI::_L11 */ _L11;
  kcg_int /* UTI::_L12 */ _L12;
  kcg_int /* UTI::_L13 */ _L13;
  kcg_int /* UTI::_L14 */ _L14;
  kcg_int /* UTI::_L15 */ _L15;
  kcg_int /* UTI::_L16 */ _L16;
  kcg_int /* UTI::_L17 */ _L17;
  kcg_int /* UTI::_L18 */ _L18;
  kcg_int /* UTI::_L19 */ _L19;
  kcg_int /* UTI::_L20 */ _L20;
  kcg_int /* UTI::_L21 */ _L21;
  kcg_int /* UTI::_L25 */ _L25;
  kcg_int /* UTI::_L26 */ _L26;
  kcg_int /* UTI::_L27 */ _L27;
  kcg_int /* UTI::_L31 */ _L31;
  kcg_int /* UTI::_L32 */ _L32;
  kcg_int /* UTI::_L33 */ _L33;
  kcg_int /* UTI::_L34 */ _L34;
  kcg_int /* UTI::_L35 */ _L35;
  kcg_int /* UTI::_L36 */ _L36;
  kcg_bool /* UTI::_L45 */ _L45;
  kcg_bool /* UTI::_L46 */ _L46;
  kcg_bool /* UTI::_L47 */ _L47;
  kcg_bool /* UTI::_L48 */ _L48;
  kcg_bool /* UTI::_L49 */ _L49;
  kcg_bool /* UTI::_L50 */ _L50;
  kcg_bool /* UTI::_L51 */ _L51;
  kcg_int /* UTI::_L52 */ _L52;
  kcg_bool /* UTI::_L54 */ _L54;
  kcg_bool /* UTI::_L55 */ _L55;
  kcg_bool /* UTI::_L56 */ _L56;
  kcg_bool /* UTI::_L57 */ _L57;
  kcg_bool /* UTI::_L58 */ _L58;
  kcg_bool /* UTI::_L59 */ _L59;
  kcg_bool /* UTI::_L60 */ _L60;
  kcg_bool /* UTI::_L61 */ _L61;
  kcg_bool /* UTI::_L62 */ _L62;
  kcg_int /* UTI::_L66 */ _L66;
  kcg_int /* UTI::_L67 */ _L67;
  kcg_bool /* UTI::_L68 */ _L68;
  kcg_bool /* UTI::_L69 */ _L69;
  kcg_real /* UTI::_L70 */ _L70;
  kcg_real /* UTI::_L71 */ _L71;
  kcg_real /* UTI::_L72 */ _L72;
} outC_UTI;

/* ===========  node initialization and cycle functions  =========== */
/* UTI */
extern void UTI(inC_UTI *inC, outC_UTI *outC);

extern void UTI_reset(outC_UTI *outC);

#endif /* _UTI_H_ */
/* $*************** KCG Version 6.1.3 (build i6) ****************
** UTI.h
** Generation date: 2015-09-24T10:15:33
*************************************************************$ */

