<%- include layouts/header.ejs %>
<link href="/../css/pages/atendimento.css" rel="stylesheet">
</head>
	<body>
	<div class="menu-masthead">
    <div class="container">
      <nav class="menu-nav">
        <a class="menu-nav-item" href="atendimento">Novo Atendimento</a>
        <a class="menu-nav-item" href="ambulancias">Ambulâncias</a>
        <a class="menu-nav-item" href="chamados">Ocorrências ativas</a>
        <a class="menu-nav-item active" href="#">Relatório</a>

		    <a class="menu-nav-item navbar-right">Sair</a>
        <a class="menu-nav-item navbar-right" href="#">Olá João!</a>

      </nav>
    </div>
  </div>

  <div class="container body-atendimento">
    <div class="row">
      <div class="col-md-3">
                <div class="alert alert-info" role="alert">
                    <b>1º Passo:</b> Digite no combo de endereço o local da emergência.
                </div>
                <form onsubmit="return false;">
                    <label>Local da emergência:</label>
                    <div class="input-group form-group">
                        
                        <input type="text" class="form-control" id="localEmergencia" placeholder="Ex.: Avenida 9 de Julho, Centro, São José dos Campos" />
                        <span class="input-group-btn">
                            <button type="button" onclick="mapa.pesquisarEndereco();" class="btn btn-default" aria-label="Search">
                              <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                            </button>
                        </span>
                    </div>
                    <label>Quantidade de vítimas:</label>
                    <div class="form-group">                        
                        <input type="number" min="1" value="1" class="form-control" id="qtdVitimas" />
                    </div>
                    <div class="form-group">
                        <button type="button" class="btn btn-info"><span class="glyphicon glyphicon-road" aria-hidden="true"></span> Calcular Ambulâncias</button>
                    </div>                    
                    <label>Observação:</label>
                    <div class="form-group">
                        <textarea class="form-control" rows="3"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary" data-toggle="modal" data-target="#myModal">Registrar Ocorrência</button>
                </form>
            </div>
      <div class="col-md-9">
                <div id="map"></div>
            </div>
    </div>
  </div>
    <!-- Modal: Confirmação do Atendimento -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-body">
            <center>
                <img src="/../images/ok.png" style="width:150px;" />
                <br />
                <label>Ocorrência aberta com sucesso!</label>  
            </center>            
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-primary" data-dismiss="modal">Confirmar</button>
          </div>
        </div>
      </div>
    </div>    

	
<%- include layouts/footer.ejs %>

    <script>

        var map, heatmap, drawingManager;
        var pointMvc = new google.maps.MVCArray([
            new google.maps.LatLng(37.782551, -122.445368),
            new google.maps.LatLng(37.782745, -122.444586),
            new google.maps.LatLng(37.782842, -122.443688)
          ]);

        function initialize() {
          initMap();
          updatePoints();
        }

        function updatePoints() {
          var response;
          $.get( "reports/all", function(r) {
            while(pointMvc.getLength() > 0) pointMvc.pop();

            console.log('parsing');
            var points = JSON.parse(r).reports;

            console.log('before for');
            console.log(points);
            for (var i=0; i<points.length; i++) {
              var p = points[i];
              console.log(p);
              console.log('adding point');
              pointMvc.push(new google.maps.LatLng(p.lat, p.lng));
            }
          });
        }

        function initMap() {
          map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            center: {lat: -23.200809, lng: -45.892521},
            mapTypeId: google.maps.MapTypeId.SATELLITE
          });

          heatmap = new google.maps.visualization.HeatmapLayer({
            data: pointMvc,
            map: map
          });

          // drawingManager = new google.maps.drawing.DrawingManager({
          //   drawingMode: google.maps.drawing.OverlayType.POLYGON,
          //   markerOptions: {
          //     draggable: true
          //   },
          //   polylineOptions: {
          //     editable: true
          //   },
          //   rectangleOptions: polyOptions,
          //   circleOptions: polyOptions,
          //   polygonOptions: polyOptions,
          //   map: map
          // });
        }

        function chooseNewArea() {

        }

        function toggleHeatmap() {
          heatmap.setMap(heatmap.getMap() ? null : map);
        }

        function changeGradient() {
          var gradient = [
            'rgba(0, 255, 255, 0)',
            'rgba(0, 255, 255, 1)',
            'rgba(0, 191, 255, 1)',
            'rgba(0, 127, 255, 1)',
            'rgba(0, 63, 255, 1)',
            'rgba(0, 0, 255, 1)',
            'rgba(0, 0, 223, 1)',
            'rgba(0, 0, 191, 1)',
            'rgba(0, 0, 159, 1)',
            'rgba(0, 0, 127, 1)',
            'rgba(63, 0, 91, 1)',
            'rgba(127, 0, 63, 1)',
            'rgba(191, 0, 31, 1)',
            'rgba(255, 0, 0, 1)'
          ]
          heatmap.set('gradient', heatmap.get('gradient') ? null : gradient);
        }

        function changeRadius() {
          heatmap.set('radius', heatmap.get('radius') ? null : 20);
        }

        function changeOpacity() {
          heatmap.set('opacity', heatmap.get('opacity') ? null : 0.2);
        }

        // Heatmap data: 500 Points
        function getPoints() {
          return [
            new google.maps.LatLng(37.782551, -122.445368),
            new google.maps.LatLng(37.782745, -122.444586),
            new google.maps.LatLng(37.782842, -122.443688)
          ];
        }

    </script>
    <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC4qT-G5vu5hSoFy89zR8YdTARSsez-3Ls&libraries=visualization,drawing&callback=initialize">
    </script>

</body>
</html>
